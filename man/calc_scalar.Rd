% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_functions.R
\name{calc_scalar}
\alias{calc_scalar}
\title{Calculate the Scaling Factor for a Pair of Channels}
\usage{
calc_scalar(img_chp, i, j, method, q_thr, pix_ss)
}
\arguments{
\item{img_chp}{List: 3d array of tiles from chopped image, across all channels}

\item{i}{Integer: index of 1st channel, which the 2nd channel is corrected with respect to}

\item{j}{Integer: index of 2nd channel, which is used to correct the 1st image}

\item{method}{Character: whether to minimize mutual info "MI" or correlation "Cor"}

\item{q_thr}{Numeric: quantile threshold to select only the tiles with lowest SSIM}

\item{pix_ss}{Integer: number of pixels to randomly subsample for calculating MI or correlation}
}
\value{
\if{html}{\out{<div class="sourceCode">}}\preformatted{ Numeric: the scaling factor to apply to channel i before subtracting from channel j
}\if{html}{\out{</div>}}
}
\description{
Calculate the scaling factor for a pair of channels
}
\details{
This function calculates the correction scaling factor for a single specified pair of channels.
The scaling factor will be applied to channel i before subtracting it from channel j, in order to
correct channel j based on overlap with channel i. Candidate scaling factors are 0, 0.01, 0.02, ..., 1.00.
The chosen scaling factor A is the one that minimizes MI or |correlation| between channel i and
channel j - A*Channel i. Only tiles below the specified quantile of SSIM between the two channels
are considered when calculating MI or |correlation|. Among these tiles, even fewer pixels may be subsampled.
}
